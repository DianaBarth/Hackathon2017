apiVersion: v1
kind: Secret
metadata:
  labels:
    app: postgresql-persistent
    template: postgresql-persistent-template
  name: postgresql
data:
  database-password: UyRjciR0
  database-user: ZXhwZW5zZXM=
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: postgresql-persistent
    template: postgresql-persistent-template
  name: postgresql
spec:
  replicas: 1
  selector:
    name: postgresql
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgresql
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgresql
        - name: POSTGRESQL_DATABASE
          value: starterjava
        image: registry.access.redhat.com/rhscl/postgresql-95-rhel7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
              'SELECT 1'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      restartPolicy: Always
      securityContext: {}
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:9.5
        namespace: openshift
    type: ImageChange
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgresql-persistent
    template: postgresql-persistent-template
  name: postgresql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    name: postgresql
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  type: ClusterIP